<?php

declare(strict_types=1);

namespace App\Pro\Entity\Product;

use App\Entity\BlameableEntity;
use App\Entity\CommonProperties;
use App\Pro\Repository\Product\MarketingFeatureRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Timestampable\Traits\TimestampableEntity;

#[ORM\Entity(repositoryClass: MarketingFeatureRepository::class)]
class MarketingFeature
{
    use BlameableEntity;
    use CommonProperties\Required\AutoGeneratedId;
    use CommonProperties\Required\Enabled;
    use CommonProperties\Required\Name;
    use TimestampableEntity;

    /**
     * @var Collection<int, Product>
     */
    #[ORM\ManyToMany(targetEntity: Product::class, mappedBy: 'marketingFeatures')]
    private Collection $products;

    public function __construct()
    {
        $this->products = new ArrayCollection();
    }

    public function __toString(): string
    {
        return $this->getName();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * @return Collection<int, Product>
     */
    public function getProducts(): Collection
    {
        return $this->products;
    }

    public function addProduct(Product $product): static
    {
        if (!$this->products->contains($product)) {
            $this->products->add($product);
            $product->addMarketingFeature($this);
        }

        return $this;
    }

    public function removeProduct(Product $product): static
    {
        if ($this->products->removeElement($product)) {
            $product->removeMarketingFeature($this);
        }

        return $this;
    }
}
