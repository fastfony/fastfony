<?php

namespace App\Pro\Entity\Collection;

use App\Entity\BlameableEntity;
use App\Entity\CommonProperties;
use App\Pro\Repository\Collection\RecordFieldValueRepository;
use Doctrine\DBAL\Types\Types;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Timestampable\Traits\TimestampableEntity;
use Symfony\Component\Serializer\Attribute\Groups;

#[ORM\Entity(repositoryClass: RecordFieldValueRepository::class)]
class RecordFieldValue
{
    use BlameableEntity;
    use CommonProperties\Required\AutoGeneratedId;
    use TimestampableEntity;

    #[Groups([
        'record:write',
    ])]
    #[ORM\Column(type: Types::TEXT, nullable: true)]
    private ?string $value = null;

    #[ORM\ManyToOne]
    #[ORM\JoinColumn(nullable: false)]
    private ?Field $field = null;

    #[ORM\ManyToOne(
        cascade: ['persist'],
        inversedBy: 'fields',
    )]
    #[ORM\JoinColumn(nullable: false)]
    private ?Record $record = null;

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getValue(): ?string
    {
        return $this->value;
    }

    public function setValue(?string $value): static
    {
        $this->value = $value;

        return $this;
    }

    public function getField(): ?Field
    {
        return $this->field;
    }

    public function setField(?Field $field): static
    {
        $this->field = $field;

        return $this;
    }

    public function getRecord(): ?Record
    {
        return $this->record;
    }

    public function setRecord(?Record $record): static
    {
        $this->record = $record;

        return $this;
    }
}
